<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on пятница, Апрель 29, 2016, 9:13  -->
<!-- MuClient version 4.94 -->

<!-- Plugin "ga_handler" generated by Plugin Wizard -->

<muclient>
<plugin
   name="ga_handler"
   author="Anton Gorev"
   id="fcb2b61b61a4481f9853d8a1"
   language="Lua"
   purpose="Inform about lines with GA char at the end (supposed to be prompt)"
   date_written="2016-04-29 21:12:25"
   requires="4.94"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<script>
<![CDATA[
local MSG_PROMPT_FOUND = 1

local function get_chars(s)
  local result = {}
  local function chars(c) table.insert(result, c) return "" end
  chars((s:gsub(".", chars)))
  return result
end

local function get_codes(s)
  local result = {}
  local function chars(c) local n = c:byte(1, 1) table.insert(result, n) return "" end
  chars((s:gsub(".", chars)))
  return result
end

local function strjoin(values, delimiter)
  local length = table.getn(values)
  if 0 == length then
    return ""
  end
  
  local result = values[1]
  for i = 2, length do
    result = result .. delimiter .. values[i]
  end
  
  return result
end

local function debug(string)
   local f = assert(io.open("debug.log", "a"))
   f:write(string.."\n")
   f:close()
end

local last_line = ""
function prompt_found()
   if "" ~= last_line then
      BroadcastPlugin(MSG_PROMPT_FOUND, last_line)
   end
end

function OnPluginPartialLine(data)
   local lines = function (str)
      local t = {}
      local function helper(line) table.insert(t, line) return "" end
      helper((str:gsub("(.-)\r?\n", helper)))
      return t
   end

   local l = lines(data)

   local count = table.getn(l)
   if 0 ~= count and "" ~= l[count] then
      last_line = l[count]
      AddTimer("prompt_timer", 0, 0, 0.25, "", timer_flag.Enabled + timer_flag.OneShot + timer_flag.Replace, "prompt_found")
   end
end
]]>
</script>

</muclient>

<!-- vim: set ai ts=3 sw=3 tw=0 et syntax=lua :-->
